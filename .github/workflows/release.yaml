name: Release

on:
  release:
    types:
      - published
      - edited

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    outputs:
      release_id: ${{ steps.create-release.outputs.id }}
      release_upload_url: ${{ steps.create-release.outputs.upload_url }}
      release_body: "${{ steps.tag.outputs.message }}"

    steps:
      - uses: actions/checkout@v4

      - name: Get version
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Get tag message
        id: tag
        run: |
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
          echo "message<<EOF" >> $GITHUB_OUTPUT
          echo "$(git tag -l --format='%(contents)' ${{ steps.get_version.outputs.version }})" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create-release
        uses: ncipollo/release-action@v1
        with:
          draft: true
          name: ${{ steps.get_version.outputs.version }}
          tag: ${{ steps.get_version.outputs.version }}
          body: "${{ steps.tag.outputs.message }}"

  build-browser-extension:
    needs: create-release
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.0

      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'

      - name: Get version
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build browser extension
        run: make build-browser-extension
        env:
          VERSION: "${{ steps.get_version.outputs.version-without-v }}"

      - name: Build userscript
        run: make build-userscript
        env:
          VERSION: "${{ steps.get_version.outputs.version-without-v }}"

      - name: Package plugin and create userscript
        run: |
          mkdir release
          mv dist/browser-extension/*.zip release/
          mv dist/openai-translator.user.js release/openai-translator-${{ steps.get_version.outputs.version-without-v }}.user.js

      - name: Upload Chromium extensions to release
        id: upload-chromium-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release_upload_url }}
          asset_path: release/chromium.zip
          asset_name: openai-translator-chromium-extension-${{ steps.get_version.outputs.version-without-v }}.zip
          asset_content_type: application/zip

      - name: Upload Firefox extensions to release
        id: upload-firefox-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release_upload_url }}
          asset_path: release/firefox.zip
          asset_name: openai-translator-firefox-extension-${{ steps.get_version.outputs.version-without-v }}.xpi
          asset_content_type: application/x-plug-in

      - name: Upload userscript to release
        id: upload-userscript-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.release_upload_url }}
          asset_path: release/openai-translator-${{ steps.get_version.outputs.version-without-v }}.user.js
          asset_name: openai-translator-${{ steps.get_version.outputs.version-without-v }}.user.js
          asset_content_type: application/javascript

  publish-release:
    needs: build-browser-extension
    permissions:
      contents: write
    runs-on: ubuntu-22.04

    steps:
      - name: publish release
        id: publish-release
        uses: actions/github-script@v6
        env:
          release_id: ${{ needs.create-release.outputs.release_id }}
        with:
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              draft: false,
              prerelease: false
            })
